// action에 Servlet 주소 다음에 parameter 안 넣고 하는 방법
// function path 만 action에 넣고 밑에 처럼 하면 될거야 

<form action="Servlet" method="Post">   
    <input type="submit" name="command" value="insert">
    <input type="submit" name="command" value="update">
</form>

//In your controller

String commend = request.getParameter("command");

if ("insert".equals(command)) {
    // command 값이 insert 일때 필요한 코드
} else if ("update".equals(command)) {
    // command 값이 update 일때 필요한 코드
}

action="${servlet}review&command=insert"

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="../js/jquery-3.4.1.min.js"></script>
<script> 


function info_chk() { 
	return true; 
} 

function info_chk2(frm) { 
	frm.action="${servlet}review&command=update"; 
	frm.submit();
	return true; 
	} </script>

</head>
<body>
<form method='post' action="${servlet}review&command=insert" onsubmit='return info_chk()'>
<div>
	<h3>만족도 평가</h3></p>
	<strong>상품에 만족하셨나요 ?</strong><p>
	<input type="radio" name="reviewStar"><strong>*</strong>
	<input type="radio" name="reviewStar"><strong>**</strong>
	<input type="radio" name="reviewStar"><strong>***</strong>
	<input type="radio" name="reviewStar"><strong>****</strong>
	<input type="radio" name="reviewStar"><strong>*****</strong>
</div>
<div>
<h3>상품리뷰작성</h3>
리뷰 제목 : <input type = "text" id="reviewTitle" name='reviewTitle' style="text-align:left; width:200px; height:20px;"><p>
리뷰 내용 : <input type="text" id="reviewContent" name="reviewContent" style="text-align:left; width:400px; height:400px;"><p>
<input type="submit" name = "insert" value="등록" >
<input type="button" name = "update" value="수정" onclick='return info_chk2(this.form)'>

</form>

</div>

</body>
</html>



package nmm.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import nmm.dto.ModelAndView;
import nmm.dto.ProductDTO;
import nmm.dto.ReviewDTO;
import nmm.service.ReviewService;
import nmm.service.UserService;

public class ReviewController implements Controller {
   int userNo;
   int reviewNo = 1;

   @Override
   public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
      String command = request.getParameter("command");
      // userNo = (int)request.getSession().getAttribute("userNo");
      System.out.println("reviewController호출 " + command);
      userNo = 1;// ????ll?? ??ð?;;
      if ("product".equals(command)) {
         select(request, response);
         return new ModelAndView("product/productDetail.jsp", false);
      }

      if ("reviewList".equals(command)) {
         reviewList(request, response);
         return new ModelAndView("view/main.jsp", false);
      }

      if ("insert".equals(command))
         insert(request, response);
      if ("update".equals(command))
         update(request, response);
      if ("delete".equals(command))
         delete(request, response);

      return new ModelAndView("myPage/review.jsp", false);

   }

   private void select(HttpServletRequest request, HttpServletResponse response) throws Exception {
      int productNo = 42;
      List<ReviewDTO> list = ReviewService.selectAll(productNo);
      request.setAttribute("list", list);
      System.out.println(list);
      //ReviewService.selectAll(new ReviewDTO(list.get(reviewNo), list.get(reviewTitle), list.get(reviewTitle), reviewTitle, reviewContent, reviewStar, reviewDate));
      
   }

   public void insert(HttpServletRequest request, HttpServletResponse response) throws Exception {
      int productNo = 42;
      // int productNo = Integer.parseInt(request.getParameter("productNo"));
      String reviewTitle = request.getParameter("reviewTitle");
      String reviewContent = request.getParameter("reviewContent");
      String reviewStar = request.getParameter("reviewStar");
      System.out.println(reviewTitle);

      ReviewService.insert(userNo, productNo, new ReviewDTO(reviewNo, reviewTitle, reviewContent, reviewStar));
   }

   private void delete(HttpServletRequest request, HttpServletResponse response) throws Exception {
      int reviewNo = Integer.parseInt(request.getParameter("reviewNo"));
      ReviewService.delete(reviewNo);
   }

   public void update(HttpServletRequest request, HttpServletResponse response) throws Exception {
	  int reviewNo=10;
      //int reviewNo = Integer.parseInt(request.getParameter("reviewNo"));
      String reviewTitle = request.getParameter("reviewTitle");
      String reviewContent = request.getParameter("reviewContent");
      String reviewStar = request.getParameter("reviewStar");
      System.out.println(reviewTitle);

      ReviewService.update(new ReviewDTO(reviewNo, reviewTitle, reviewContent, reviewStar));
   }

   private void reviewList(HttpServletRequest request, HttpServletResponse response) throws Exception {
      List<ProductDTO> list = ReviewService.selectTop();
      request.setAttribute("listPopular", list);
      System.out.println(list);
   }
}


package nmm.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import nmm.dto.ProductDTO;
import nmm.dto.ReviewDTO;
import nmm.util.DbUtil;

public class ReviewDAOImpl implements ReviewDAO {

	@Override
	public List<ReviewDTO> selectAll(int productNo) throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		List<ReviewDTO> list = new ArrayList<>();
		//String sql = "SELECT USER_ID, PRODUCT_NO, REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_STAR, REVIEW_DATE FROM REVIEWJOIN WHERE PRODUCT_NO=?";
		String sql = "SELECT REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_STAR, REVIEW_DATE FROM REVIEW WHERE PRODUCT_NO=?";
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, productNo);
			rs = ps.executeQuery();
			while (rs.next()) {
				/*
				 * ReviewDTO reviewDTO = new ReviewDTO(rs.getString(1), rs.getInt(2),
				 * rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6));
				 */
				//ProductDTO productDTO = new ProductDTO();
				ReviewDTO reviewDTO = new ReviewDTO();
				reviewDTO.setReviewNo(rs.getInt(1));
				//reviewDTO.setProductDTO(productDTO);
				reviewDTO.setReviewTitle(rs.getString(2));
				reviewDTO.setReviewContent(rs.getString(3));
				reviewDTO.setReviewStar(rs.getString(4));
				reviewDTO.setReviewDate(rs.getString(5));
				list.add(reviewDTO);
			}
			//System.out.println(list);
		} finally {
			DbUtil.dbClose(rs, ps, con);

		}
		return list;

	}

	@Override
	public int insert(int userNo, int productNo, ReviewDTO dto) throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		int result = 0;
		String sql = "INSERT INTO REVIEW (PRODUCT_NO, REVIEW_NO, REVIEW_TITLE,REVIEW_CONTENT,REVIEW_STAR, REVIEW_DATE) VALUES(?, REVIEW_NO_SEQ.NEXTVAL,?,?,?,SYSDATE)";
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, productNo);
			ps.setString(2, dto.getReviewTitle());
			ps.setString(3, dto.getReviewContent());
			ps.setString(4, dto.getReviewStar());
			result = ps.executeUpdate();
		} finally {
			DbUtil.dbClose(ps, con);
		}
		// System.out.println(result);
		return result;
	}

	@Override
	public int update(ReviewDTO dto) throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		int result = 0;
		String sql = "UPDATE REVIEW SET REVIEW_TITLE=?, REVIEW_CONTENT=?, REVIEW_STAR=? WHERE REVIEW_NO=?";
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			ps.setString(1, dto.getReviewTitle());
			ps.setString(2, dto.getReviewContent());
			ps.setString(3, dto.getReviewStar());
			ps.setInt(4, dto.getReviewNo());
			result = ps.executeUpdate();
			result = ps.executeUpdate();
		} finally {
			DbUtil.dbClose(ps, con);
		}
		return result;
	}

	
	
	@Override
	public int delete(int reviewNo) throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		String sql = "delete from REVIEW where REVIEW_NO=?";
		int result= 0;
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, reviewNo);
			result = ps.executeUpdate();
		} finally {
			DbUtil.dbClose(ps, con);
		}
		return result;
	}

	@Override
	public List<ProductDTO> selectTop() throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		String sql = "SELECT PRODUCT_NO, COUNT(*) AS CNT FROM REVIEW GROUP BY PRODUCT_NO ORDER BY CNT DESC";
		List<Integer> productList = new ArrayList<>();
		List<ProductDTO> list = new ArrayList<>();
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			rs = ps.executeQuery();
			ps.clearParameters();  
			for (int i=0; i<4; i++) {
				rs.next();
				productList.add(rs.getInt("PRODUCT_NO"));
			}
			String sql2 = "SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE FROM PRODUCT WHERE PRODUCT_NO IN(?,?,?,?)";
			ps = con.prepareStatement(sql2);
			ps.setInt(1, productList.get(0));
			ps.setInt(2, productList.get(1));
			ps.setInt(3, productList.get(2));
			ps.setInt(4, productList.get(3));
			rs = ps.executeQuery();
			for (int i=0; i<4; i++) {
				rs.next();
				list.add(new ProductDTO(rs.getInt(1), rs.getString(2), rs.getInt(3)));
			}
		} finally {
			DbUtil.dbClose(rs, ps, con);
		}
		return list;
	}
}


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h1 align = center>**********************************************상품 리뷰*********************************************</h1>
<table align="center" style="border:1; border-style:solid; border-color:#dddddd;">
<tr>
<td width = 500>***** - 옷이 너무이뻐요
</td>
<td align=right width = 300>작성자<br>
jang333333
</td>
</tr>
<tr>
<td width = 500>리뷰 내용입니다.....
</td>
<td align=right width = 300>작성일<br>
09/11/2019
</td>
</tr>
</table>

<table align="center"   style="border:1; border-style:solid; border-color:#dddddd">
<tr>
<td width = 500>***** - 만족했습니다
</td>
<td align=right width = 300>작성자<br>
pengsubabo
</td>
</tr>
<tr>
<td width = 500>리뷰 내용입니다.....
</td>
<td align=right width = 300>작성일<br>
09/15/2019
</td>
</tr>
</table>

<table align="center"   style="border:1; border-style:solid; border-color:#dddddd">
<tr>
<td width = 500>***** - 좋아요
</td>
<td align=right width = 300>작성자<br>
idididididididid
</td>
</tr>
<tr>
<td width = 500>리뷰 내용입니다.....
</td>
<td align=right width = 300>작성일<br>
09/11/2019
</td>
</tr>
</table>
</body>
</html>

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h1 align = center>상품 리뷰 </h1>
<table align="center" style="border:1; border-style:solid; border-color:#dddddd;">
<tr>
<td width = 500>***** - 옷이 너무이뻐요
</td>
<td align=right width = 300>작성자<br>
jang333333
</td>
</tr>
<tr>
<td width = 500>여동생 생일 선물로 샀는데, 여동생이 아주 좋아하네요. <br>
매우 만족합니다.
</td>
<td align=right width = 300>작성일<br>
09/11/2019
</td>
</tr>
</table>

<table align="center"   style="border:1; border-style:solid; border-color:#dddddd">
<tr>
<td width = 500>**** - 만족했습니다
</td>
<td align=right width = 300>작성자<br>
pengsubabo
</td>
</tr>
<tr>
<td width = 500><br>
만족합니다.
</td>
<td align=right width = 300>작성일<br>
09/15/2019
</td>
</tr>
</table>

<table align="center"   style="border:1; border-style:solid; border-color:#dddddd">
<tr>
<td width = 500>*** - 좋아요
</td>
<td align=right width = 300>작성자<br>
idididididididid
</td>
</tr>
<tr>
<td width = 500>좋은 것 같아요.  가성비 대비 좋아요.
</td>
<td align=right width = 300>작성일<br>
09/11/2019
</td>
</tr>
</table>
</body>
</html>
-----------------------------------------------------------------------------------------

package nmm.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import nmm.dto.ModelAndView;
import nmm.dto.ProductDTO;
import nmm.dto.ReviewDTO;
import nmm.service.ReviewService;
import nmm.service.UserService;

public class ReviewController implements Controller {
   int userNo;
   int reviewNo = 1;

   @Override
   public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
      String command = request.getParameter("command");
      // userNo = (int)request.getSession().getAttribute("userNo");
      System.out.println("reviewController호출 " + command);
      userNo = 1;// ????ll?? ??ð?;;
      if ("product".equals(command)) {
         select(request, response);
         return new ModelAndView("product/productDetail.jsp", false);
      }

      if ("reviewList".equals(command)) {
         reviewList(request, response);
         return new ModelAndView("view/main.jsp", false);
      }

      if ("insert".equals(command))
         insert(request, response);
      if ("update".equals(command))
         update(request, response);
      if ("delete".equals(command))
         delete(request, response);

      return new ModelAndView("myPage/review.jsp", false);

   }

   private void select(HttpServletRequest request, HttpServletResponse response) throws Exception {
      //int productNo = (int)request.getAttribute("productNo");
	  //int productNo = Integer.parseInt(request.getParameter("productNo"));
      //System.out.println(productNo);
	  int productNo=42;
      ReviewDTO dto = new ReviewDTO();
      List<ReviewDTO> list = ReviewService.selectAll(productNo);
      
      request.setAttribute("list", list);
      int i;
      //System.out.println(list);
      for (i=0;i<list.size();i++) {
    	  System.out.println(list.get(i));
      }
      //System.out.println(list);
      
      
   }

   public void insert(HttpServletRequest request, HttpServletResponse response) throws Exception {
      int productNo = 42;
      // int productNo = Integer.parseInt(request.getParameter("productNo"));
      String reviewTitle = request.getParameter("reviewTitle");
      String reviewContent = request.getParameter("reviewContent");
      String reviewStar = request.getParameter("reviewStar");
      //System.out.println(reviewTitle);

      ReviewService.insert(userNo, productNo, new ReviewDTO(reviewNo, reviewTitle, reviewContent, reviewStar));
   }

   private void delete(HttpServletRequest request, HttpServletResponse response) throws Exception {
      int reviewNo = Integer.parseInt(request.getParameter("reviewNo"));
      ReviewService.delete(reviewNo);
   }

   public void update(HttpServletRequest request, HttpServletResponse response) throws Exception {
	  int reviewNo=10;
      //int reviewNo = Integer.parseInt(request.getParameter("reviewNo"));
      String reviewTitle = request.getParameter("reviewTitle");
      String reviewContent = request.getParameter("reviewContent");
      String reviewStar = request.getParameter("reviewStar");
      //System.out.println(reviewTitle);

      ReviewService.update(new ReviewDTO(reviewNo, reviewTitle, reviewContent, reviewStar));
   }

   private void reviewList(HttpServletRequest request, HttpServletResponse response) throws Exception {
      List<ProductDTO> list = ReviewService.selectTop();
      request.setAttribute("listPopular", list);
      System.out.println(list);
   }
}

----------------
package nmm.dao;

import java.util.List;

import nmm.dto.ProductDTO;
import nmm.dto.ReviewDTO;

public interface ReviewDAO {
	
	List<ReviewDTO> selectAll(int productNo) throws Exception;
	
	int insert(int userNo, int productNo, ReviewDTO dto) throws Exception;
	   
	int update(ReviewDTO dto) throws Exception;

	List<ProductDTO> selectTop() throws Exception;
	   
	int delete(int reviewNo) throws Exception;
	
	}

-------------------------
package nmm.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import nmm.dto.ProductDTO;
import nmm.dto.ReviewDTO;
import nmm.util.DbUtil;

public class ReviewDAOImpl implements ReviewDAO {

	@Override
	public List<ReviewDTO> selectAll(int productNo) throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		List<ReviewDTO> list = new ArrayList<>();
		//String sql = "SELECT USER_ID, PRODUCT_NO, REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_STAR, REVIEW_DATE FROM REVIEWJOIN WHERE PRODUCT_NO=?";
		String sql = "SELECT REVIEW_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_STAR, REVIEW_DATE FROM REVIEW WHERE PRODUCT_NO=?";
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, productNo);
			rs = ps.executeQuery();
			while (rs.next()) {
				/*
				 * ReviewDTO reviewDTO = new ReviewDTO(rs.getString(1), rs.getInt(2),
				 * rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6));
				 */
				//ProductDTO productDTO = new ProductDTO();
				ReviewDTO reviewDTO = new ReviewDTO();
				reviewDTO.setReviewNo(rs.getInt(1));
				//reviewDTO.setProductDTO(productDTO);
				reviewDTO.setReviewTitle(rs.getString(2));
				reviewDTO.setReviewContent(rs.getString(3));
				reviewDTO.setReviewStar(rs.getString(4));
				reviewDTO.setReviewDate(rs.getString(5));
				list.add(reviewDTO);
			}
			//System.out.println(list);
		} finally {
			DbUtil.dbClose(rs, ps, con);

		}
		return list;

	}

	@Override
	public int insert(int userNo, int productNo, ReviewDTO dto) throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		int result = 0;
		String sql = "INSERT INTO REVIEW (PRODUCT_NO, REVIEW_NO, REVIEW_TITLE,REVIEW_CONTENT,REVIEW_STAR, REVIEW_DATE) VALUES(?, REVIEW_NO_SEQ.NEXTVAL,?,?,?,SYSDATE)";
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, productNo);
			ps.setString(2, dto.getReviewTitle());
			ps.setString(3, dto.getReviewContent());
			ps.setString(4, dto.getReviewStar());
			result = ps.executeUpdate();
		} finally {
			DbUtil.dbClose(ps, con);
		}
		// System.out.println(result);
		return result;
	}

	@Override
	public int update(ReviewDTO dto) throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		int result = 0;
		String sql = "UPDATE REVIEW SET REVIEW_TITLE=?, REVIEW_CONTENT=?, REVIEW_STAR=? WHERE REVIEW_NO=?";
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			ps.setString(1, dto.getReviewTitle());
			ps.setString(2, dto.getReviewContent());
			ps.setString(3, dto.getReviewStar());
			ps.setInt(4, dto.getReviewNo());
			result = ps.executeUpdate();
			result = ps.executeUpdate();
		} finally {
			DbUtil.dbClose(ps, con);
		}
		return result;
	}

	
	
	@Override
	public int delete(int reviewNo) throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		String sql = "delete from REVIEW where REVIEW_NO=?";
		int result= 0;
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			ps.setInt(1, reviewNo);
			result = ps.executeUpdate();
		} finally {
			DbUtil.dbClose(ps, con);
		}
		return result;
	}

	@Override
	public List<ProductDTO> selectTop() throws Exception {
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		String sql = "SELECT PRODUCT_NO, COUNT(*) AS CNT FROM REVIEW GROUP BY PRODUCT_NO ORDER BY CNT DESC";
		List<Integer> productList = new ArrayList<>();
		List<ProductDTO> list = new ArrayList<>();
		try {
			con = DbUtil.getConnection();
			ps = con.prepareStatement(sql);
			rs = ps.executeQuery();
			ps.clearParameters();  
			for (int i=0; i<4; i++) {
				rs.next();
				productList.add(rs.getInt("PRODUCT_NO"));
			}
			String sql2 = "SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE FROM PRODUCT WHERE PRODUCT_NO IN(?,?,?,?)";
			ps = con.prepareStatement(sql2);
			ps.setInt(1, productList.get(0));
			ps.setInt(2, productList.get(1));
			ps.setInt(3, productList.get(2));
			ps.setInt(4, productList.get(3));
			rs = ps.executeQuery();
			for (int i=0; i<4; i++) {
				rs.next();
				list.add(new ProductDTO(rs.getInt(1), rs.getString(2), rs.getInt(3)));
			}
		} finally {
			DbUtil.dbClose(rs, ps, con);
		}
		return list;
	}
}
--------------------------
package nmm.dto;

public class ReviewDTO {
	private int reviewNo;
	private UserDTO userDTO;
	private ProductDTO productDTO;
	private String reviewTitle;
	private String reviewContent;
	private String reviewStar;
	private String reviewDate;
	private String userId;
	
	public ReviewDTO(int reviewNo, UserDTO userDTO, ProductDTO productDTO, String reviewTitle, String reviewContent,
			String reviewStar, String reviewDate) {
		super();
		this.reviewNo = reviewNo;
		this.userDTO = userDTO;
		this.productDTO = productDTO;
		this.reviewTitle = reviewTitle;
		this.reviewContent = reviewContent;
		this.reviewStar = reviewStar;
		this.reviewDate = reviewDate;
	}

	
	public ReviewDTO(ProductDTO productDTO, String reviewTitle, String reviewContent, String reviewStar,
			String reviewDate) {
		super();
		this.productDTO = productDTO;
		this.reviewTitle = reviewTitle;
		this.reviewContent = reviewContent;
		this.reviewStar = reviewStar;
		this.reviewDate = reviewDate;
	}
	

	public ReviewDTO( ProductDTO productDTO, int reviewNo, String reviewTitle, String reviewContent, String reviewStar,
			String reviewDate) {
		super();
		this.reviewNo = reviewNo;
		this.productDTO = productDTO;
		this.reviewTitle = reviewTitle;
		this.reviewContent = reviewContent;
		this.reviewStar = reviewStar;
		this.reviewDate = reviewDate;
	}


	public ReviewDTO(String userId, int reviewNo,  String reviewTitle, String reviewContent,
			String reviewStar, String reviewDate) {
		super();
		this.userId = this.userDTO.getUserId();
		this.reviewNo = reviewNo;
		this.reviewTitle = reviewTitle;
		this.reviewContent = reviewContent;
		this.reviewStar = reviewStar;
		this.reviewDate = reviewDate;
	}
	
	public ReviewDTO(int reviewNo,  String reviewTitle, String reviewContent,
			String reviewStar) {
		super();
		this.reviewNo = reviewNo;
		this.reviewTitle = reviewTitle;
		this.reviewContent = reviewContent;
		this.reviewStar = reviewStar;
	}
	
	public ReviewDTO() {
		super();
	}
	public int getReviewNo() {
		return reviewNo;
	}
	public void setReviewNo(int reviewNo) {
		this.reviewNo = reviewNo;
	}
	public UserDTO getUserDTO() {
		return userDTO;
	}
	public void setUserDTO(UserDTO userDTO) {
		this.userDTO = userDTO;
	}
	public ProductDTO getProductDTO() {
		return productDTO;
	}
	public void setProductDTO(ProductDTO productDTO) {
		this.productDTO = productDTO;
	}
	public String getReviewTitle() {
		return reviewTitle;
	}
	public void setReviewTitle(String reviewTitle) {
		this.reviewTitle = reviewTitle;
	}
	public String getReviewContent() {
		return reviewContent;
	}
	public void setReviewContent(String reviewContent) {
		this.reviewContent = reviewContent;
	}
	public String getReviewStar() {
		return reviewStar;
	}
	public void setReviewStar(String reviewStar) {
		this.reviewStar = reviewStar;
	}
	public String getReviewDate() {
		return reviewDate;
	}
	public void setReviewDate(String reviewDate) {
		this.reviewDate = reviewDate;
	}


	@Override
	public String toString() {
		return "ReviewDTO [reviewNo=" + reviewNo + ", reviewTitle=" + reviewTitle + ", reviewContent=" + reviewContent
				+ ", reviewStar=" + reviewStar + ", reviewDate=" + reviewDate + "]";
	}


	
	
}

--------------------

package nmm.service;

import java.util.List;

import nmm.dao.ReviewDAO;
import nmm.dao.ReviewDAOImpl;
import nmm.dto.ProductDTO;
import nmm.dto.ReviewDTO;

public class ReviewService {

	private static ReviewDAO dao = new ReviewDAOImpl();

	public static List<ReviewDTO> selectAll(int productNo) throws Exception {
		return dao.selectAll(productNo);
	}

	public static int insert(int userNo, int productNo, ReviewDTO dto) throws Exception {
		return dao.insert(userNo, productNo, dto);
	}

	public static int update(ReviewDTO dto) throws Exception {
		return dao.update(dto);
	}

	public static int delete(int reviewNo) throws Exception {
		return dao.delete(reviewNo);
	}

	public static List<ProductDTO> selectTop() throws Exception {
		List<ProductDTO> list = dao.selectTop();
		return list;
	}
}

-------------------------

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="../js/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
$(document).ready(function(){
	if("#reviewContent").val()==""{
		$("")
	}
}
	$("#id").keyup(function(){
		if($(this).val()==""){
			$("span").text("");
			return;
		}
</script>
</head>
<body>
<form method='post' action="${servlet}review&command=insert">
<div>
	<h3>만족도 평가</h3></p>
	<strong>상품에 만족하셨나요 ?</strong><p>
	<input type="radio" name="reviewStar" value = 1><strong>*</strong>
	<input type="radio" name="reviewStar" value = 2><strong>**</strong>
	<input type="radio" name="reviewStar" value = 3><strong>***</strong>
	<input type="radio" name="reviewStar" value = 4><strong>****</strong>
	<input type="radio" name="reviewStar" value = 5><strong>*****</strong>
</div>
<div>
<h3>상품리뷰작성</h3>
리뷰 제목 : <input type = "text" id="reviewTitle" name='reviewTitle' style="text-align:left; width:200px; height:20px;"><p>
리뷰 내용 : <input type="text" id="reviewContent" name="reviewContent" style="text-align:left; width:400px; height:400px;"><p>
<input type="submit" value="등록" />
<input type = "button" value= "수정" a href='<%=application.getContextPath()%>/servlet?review&command=update'>
</div>
</form>
</body>
</html>

-------------
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<!-- <script> 
      setTimeout(function(){
    	  location.reload();
      }, 10000);

</script> -->
</head>
<body>
<h1 align = center>상품 리뷰 </h1>
<table>
		<tr>
			<th>리뷰 번호</th>
			<th>제목</th>
			<th>내용</th>
			<th>별점</th>
			<th>날짜</th>

		</tr>
		<c:forEach var="list" items="${list}">
			<tr>
				<td>${list.reviewNo}</td>
				<td><a href="#" class=openMask>${list.reviewTitle}</a></td>
				<td>${list.reviewContent}</td>
				<td>${list.reviewStar}</td>
				<td>${list.reviewDate}</td>
		</c:forEach>
	</table>
</body>
</html>
--------------
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h1>purchaseHistory.jsp</h1>
<input type ="button" value = "리뷰" onclick="location.href='<%=application.getContextPath()%>/myPage/review.jsp'">
</body>
</html>


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="../js/jquery-3.4.1.min.js"></script>
<script> 
function info_chk() { 
	return true; 
} function info_chk2(frm) { 
	frm.action="${servlet}review&command=update"; 
	frm.submit();
	return true; 
	} </script>

</head>
<body>
<form method='post' action="${servlet}review&command=insert" onsubmit='return info_chk()'>
<div>
	<h3>만족도 평가</h3></p>
	<strong>상품에 만족하셨나요 ?</strong><p>
	<input type="radio" name="reviewStar" value = 1><strong>*</strong>
	<input type="radio" name="reviewStar" value = 2><strong>**</strong>
	<input type="radio" name="reviewStar" value = 3><strong>***</strong>
	<input type="radio" name="reviewStar" value = 4><strong>****</strong>
	<input type="radio" name="reviewStar" value = 5><strong>*****</strong>
</div>
<div>
<h3>상품리뷰작성</h3>
리뷰 제목 : <input type = "text" id="reviewTitle" name='reviewTitle' style="text-align:left; width:200px; height:20px;"><p>
리뷰 내용 : <input type="text" id="reviewContent" name="reviewContent" style="text-align:left; width:400px; height:400px;"><p>
<input type="submit" name = "insert" value="등록" >
<input type="button" name = "update" value="수정" onclick='return info_chk2(this.form)'>

</form>

</div>

</body>
</html>

-----------------------
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    
    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="../js/jquery-3.4.1.min.js"></script>

</head>
<body>
<h1>purchaseHistory.jsp</h1>
<c:if test="${purchse.review==null}">

<input type ="button" value = "리뷰등록" onclick="location.href='<%=application.getContextPath()%>/myPage/review.jsp'">
<c:otherwise>
<input type ="button" value = "리뷰수정" onclick="location.href='<%=application.getContextPath()%>/myPage/reviewUpdate.jsp'">
</c:otherwise>
</c:if>
	
</body>
</html>
----------------purchaseHIstory
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    
    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="../js/jquery-3.4.1.min.js"></script>

</head>
<body>
<h1>purchaseHistory.jsp</h1>
<c:if test="${purchse.review==null}">

<input type ="button" value = "리뷰등록" onclick="location.href='<%=application.getContextPath()%>/myPage/review.jsp'">
<c:otherwise>
<input type ="button" value = "리뷰수정" onclick="location.href='<%=application.getContextPath()%>/myPage/reviewUpdate.jsp'">
</c:otherwise>
</c:if>
	
</body>
</html>
-------------------review.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="../js/jquery-3.4.1.min.js"></script>
<script> 
function info_chk() { 
	return true; 
} function info_chk2(frm) { 
	frm.action="${servlet}review&command=update"; 
	frm.submit();
	return true; 
	} </script>

</head>
<body>
<form method='post' action="${servlet}review&command=insert" onsubmit='return info_chk()'>
<div>
	<h3>만족도 평가</h3></p>
	<strong>상품에 만족하셨나요 ?</strong><p>
	<input type="radio" name="reviewStar" value = 1><strong>*</strong>
	<input type="radio" name="reviewStar" value = 2><strong>**</strong>
	<input type="radio" name="reviewStar" value = 3><strong>***</strong>
	<input type="radio" name="reviewStar" value = 4><strong>****</strong>
	<input type="radio" name="reviewStar" value = 5><strong>*****</strong>
</div>
<div>
<h3>상품리뷰작성</h3>
리뷰 제목 : <input type = "text" id="reviewTitle" name='reviewTitle' style="text-align:left; width:200px; height:20px;"><p>
리뷰 내용 : <input type="text" id="reviewContent" name="reviewContent" style="text-align:left; width:400px; height:400px;"><p>
<input type="submit" name = "insert" value="등록" >
<input type="button" name = "update" value="수정" onclick='return info_chk2(this.form)'>

</form>

</div>

</body>
</html>
-------------------------------reviewUpdate
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="../js/jquery-3.4.1.min.js"></script>

</head>
<body>
<form method='post' action="${servlet}review&command=update" >
<div>
	<h3>만족도 평가</h3></p>
	<strong>상품에 만족하셨나요 ?</strong><p>
	<c:choose>
	<c:when test="${list.reviewStar}==1}">
	<input type="radio" name="reviewStar" checked="checked"><strong>*</strong>
	<input type="radio" name="reviewStar" ><strong>**</strong>
	<input type="radio" name="reviewStar" ><strong>***</strong>
	<input type="radio" name="reviewStar" ><strong>****</strong>
	<input type="radio" name="reviewStar" ><strong>*****</strong>
	</c:when>
	<c:when test="${list.reviewStar}==2}">
	<input type="radio" name="reviewStar" ><strong>*</strong>
	<input type="radio" name="reviewStar" checked="checked"><strong>**</strong>
	<input type="radio" name="reviewStar" ><strong>***</strong>
	<input type="radio" name="reviewStar" ><strong>****</strong>
	<input type="radio" name="reviewStar" ><strong>*****</strong>
	</c:when>
	<c:when test="${list.reviewStar}==3}">
	<input type="radio" name="reviewStar" ><strong>*</strong>
	<input type="radio" name="reviewStar" ><strong>**</strong>
	<input type="radio" name="reviewStar" checked="checked"><strong>***</strong>
	<input type="radio" name="reviewStar" ><strong>****</strong>
	<input type="radio" name="reviewStar" ><strong>*****</strong>
	</c:when>
	<c:when test="${list.reviewStar}==4}">
	<input type="radio" name="reviewStar" ><strong>*</strong>
	<input type="radio" name="reviewStar" ><strong>**</strong>
	<input type="radio" name="reviewStar" ><strong>***</strong>
	<input type="radio" name="reviewStar" checked="checked"><strong>****</strong>
	<input type="radio" name="reviewStar" ><strong>*****</strong>
	</c:when>
	<c:otherwise>
	<input type="radio" name="reviewStar" ><strong>*</strong>
	<input type="radio" name="reviewStar" ><strong>**</strong>
	<input type="radio" name="reviewStar" ><strong>***</strong>
	<input type="radio" name="reviewStar" ><strong>****</strong>
	<input type="radio" name="reviewStar" checked="checked"><strong>*****</strong>
	</c:otherwise>
</c:choose>
	
</div>
<div>
<h3>상품리뷰작성</h3>
리뷰 제목 : <input type = "text" id="reviewTitle" name='reviewTitle' style="text-align:left; width:200px; height:20px;">${list.reviewTitle}<p>
리뷰 내용 : <input type="text" id="reviewContent" name="reviewContent" style="text-align:left; width:400px; height:400px;">${list.reviewContent}<p>
<input type="submit" name = "insert" value="수정">

</form>

</div>

</body>
</html>

------------------------review css 들어가기
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="../js/jquery-3.4.1.min.js"></script>
<script> 
function info_chk() { 
	return true; 
} function info_chk2(frm) { 
	frm.action="${servlet}review&command=update"; 
	frm.submit();
	return true; 
	} </script>

<style>
/* CSS RESET */
* {
    padding: 0;
    border: 0;
    margin: 0;
}
a {text-decoration: none;}
li {list-style: none;}

body,html{
    height: 100%;
    background-color: #f4f4f4;
    font-family: 'Maven Pro','Noto Sans KR';
}

.full-bg{
    height: 100%;
}

.table{
    height: 100%;
    display:table;
    margin: 0 auto;
}
.table-cell{
    height: 100%;
    display: table-cell;
    vertical-align: middle;

}
.login-container{
    width: 500px;
    background-color: #fff;
    padding: 70px 20px;
    box-sizing: border-box;

}
.login--title{
    width: 100%;
    text-align: center;
    font-size: 50px;
}
.form-input{
    width: 100%;
    padding: 10px 20px;
    font-size: 16px;
    outline: none;
    margin: 5px 0;
    border: 1px solid #efefef;
    box-sizing: border-box;
}

.form-input:focus{
    box-shadow: 3px 3px 5px rgba(0,0,0,0.1);
    border: none;
}

.form-input--title{
    width: 100%;
    display: block;
    margin-top: 5px;
    margin-bottom: 0;
    box-sizing: border-box;
    font-size: 16px;
}
.form-btn{
    display: block;
    width: 100%;
    font-size: 16px;
    height: 40px;
    background-color: #000;
    color: #fff;
    box-sizing: border-box;
    margin: 5px 0;
    cursor: pointer;
}

.form-btn:hover{
    background-color: brown;
    box-shadow: 3px 3px 3px rgba(0,0,0,0.5);
    
}

</style>


</head>
<body>
<form method='post' action="${servlet}review&command=insert" onsubmit='return info_chk()'>
<div>
	<h3>만족도 평가</h3></p>
	<strong>상품에 만족하셨나요 ?</strong><p>
	<input type="radio" name="reviewStar" value = 1><strong>*</strong>
	<input type="radio" name="reviewStar" value = 2><strong>**</strong>
	<input type="radio" name="reviewStar" value = 3><strong>***</strong>
	<input type="radio" name="reviewStar" value = 4><strong>****</strong>
	<input type="radio" name="reviewStar" value = 5><strong>*****</strong>
</div>
<div>
<h3>상품리뷰작성</h3>
리뷰 제목 : <input type = "text" id="reviewTitle" name='reviewTitle' style="text-align:left; width:200px; height:20px;"><p>
리뷰 내용 : <input type="text" id="reviewContent" name="reviewContent" style="text-align:left; width:400px; height:400px;"><p>
<input type="submit" name = "insert" value="등록" >
<input type="button" name = "update" value="수정" onclick='return info_chk2(this.form)'>

</form>

</div>

</body>





<body>
<div class="full-bg">
	<div class="table">
		<div class="table-cell">
  				<form method="post" action="../servlet?controller=user&command=signUp">
                    <div class="login-container">
                        <h3 class="login--title">SIGN UP</h3>
                        
                        <label class=form-input--title>ID</label>
                        <input type="text" id ="userId" name="userId" class="form-input" value="">
                        
                        <label class=form-input--title>PASSWORD</label>
                        <input type="password" id="userPwd" name="userPwd" class="form-input">
                        
                        <label class=form-input--title>NAME</label>
                        <input type="text" id ="userName" name="userName" class="form-input" value="">
                        
                        <label class=form-input--title>ADDRESS</label>
                        <input type="text" id ="userAddr" name="userAddr" class="form-input" value="">
                        
                        <label class=form-input--title>TEL</label>
                        <input type="text" id ="userPhone" name="userPhone" class="form-input" value="">
                        
                        <label class=form-input--title>EMAIL</label>
                        <input type="text" id ="userEmail" name="userEmail" class="form-input" value="">
                        
                        <label class=form-input--title>BIRHT DAY</label>
                        <input type="date" id ="userBirth" name="userBirth" class="form-input" value="">
                        
                        <input type="submit" class="form-btn" value="SIGN UP">
                        
                    </div>
 				</form>
		</div>
	</div>
</div>
</body>





</html>